<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

<bean id="customAccessDenied" class="org.zerock.security.CustomAccessDeniedHandler"></bean>
<bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean>
<!-- <bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"></bean> -->
<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />


<security:http auto-config="true" use-expressions="true">
	
	<security:intercept-url pattern="/sample/all" access="permitAll"/>
	
	<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
	
	<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
	
	
	<!-- <security:access-denied-handler error-page="/accessError" /> -->
	
	<security:access-denied-handler ref="customAccessDenied" />
	
	<!-- <security:form-login /> -->
	
	<security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess" />
	

	<!-- <security:csrf disabled="true" /> -->	
	
	<security:logout logout-url="/customLogout" invalidate-session="true"/>
		
</security:http>

<security:authentication-manager>

	<security:authentication-provider>
	<!-- 기존의 테이블을 이용하는 경우 -->
	<!-- <jdbc-user-service data-source-ref="dataSource" users-by-username-query="SELECT username, password as password,1 as enabled FROM users  WHERE username=?" authorities-by-username-query="SELECT username, authority,1 as enabled FROM users WHERE username =?" />
	  -->
			<security:jdbc-user-service data-source-ref="dataSource" />
			
			<security:password-encoder ref="customPasswordEncoder" />
			
	</security:authentication-provider>

</security:authentication-manager>




</beans>
